/*
 * Sia
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goobox.sync.sia.client.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse200Externalsettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-12T09:40:06.745-04:00")
public class InlineResponse200Externalsettings {
  @SerializedName("acceptingcontracts")
  private Boolean acceptingcontracts = null;

  @SerializedName("maxdownloadbatchsize")
  private Integer maxdownloadbatchsize = null;

  @SerializedName("maxduration")
  private Integer maxduration = null;

  @SerializedName("maxrevisebatchsize")
  private Integer maxrevisebatchsize = null;

  @SerializedName("netaddress")
  private String netaddress = null;

  @SerializedName("remainingstorage")
  private Integer remainingstorage = null;

  @SerializedName("totalstorage")
  private Integer totalstorage = null;

  @SerializedName("unlockhash")
  private String unlockhash = null;

  @SerializedName("windowsize")
  private Integer windowsize = null;

  @SerializedName("collateral")
  private String collateral = null;

  @SerializedName("maxcollateral")
  private String maxcollateral = null;

  @SerializedName("contractprice")
  private String contractprice = null;

  @SerializedName("downloadbandwidthprice")
  private String downloadbandwidthprice = null;

  @SerializedName("storageprice")
  private String storageprice = null;

  @SerializedName("uploadbandwidthprice")
  private String uploadbandwidthprice = null;

  @SerializedName("revisionnumber")
  private Integer revisionnumber = null;

  @SerializedName("version")
  private String version = null;

  public InlineResponse200Externalsettings acceptingcontracts(Boolean acceptingcontracts) {
    this.acceptingcontracts = acceptingcontracts;
    return this;
  }

   /**
   * Whether or not the host is accepting new contracts.
   * @return acceptingcontracts
  **/
  @ApiModelProperty(value = "Whether or not the host is accepting new contracts.")
  public Boolean isAcceptingcontracts() {
    return acceptingcontracts;
  }

  public void setAcceptingcontracts(Boolean acceptingcontracts) {
    this.acceptingcontracts = acceptingcontracts;
  }

  public InlineResponse200Externalsettings maxdownloadbatchsize(Integer maxdownloadbatchsize) {
    this.maxdownloadbatchsize = maxdownloadbatchsize;
    return this;
  }

   /**
   * The maximum size of a single download request from a renter. Each download request has multiple round trips of communication that exchange money. Larger batch sizes mean fewer round trips, but more financial risk for the host - the renter can get a free batch when downloading by refusing to provide a signature. 
   * @return maxdownloadbatchsize
  **/
  @ApiModelProperty(example = "17825792", value = "The maximum size of a single download request from a renter. Each download request has multiple round trips of communication that exchange money. Larger batch sizes mean fewer round trips, but more financial risk for the host - the renter can get a free batch when downloading by refusing to provide a signature. ")
  public Integer getMaxdownloadbatchsize() {
    return maxdownloadbatchsize;
  }

  public void setMaxdownloadbatchsize(Integer maxdownloadbatchsize) {
    this.maxdownloadbatchsize = maxdownloadbatchsize;
  }

  public InlineResponse200Externalsettings maxduration(Integer maxduration) {
    this.maxduration = maxduration;
    return this;
  }

   /**
   * The maximum duration that a host will allow for a file contract. The host commits to keeping files for the full duration under the threat of facing a large penalty for losing or dropping data before the duration is complete. The storage proof window of an incoming file contract must end before the current height + maxduration. 
   * @return maxduration
  **/
  @ApiModelProperty(example = "25920", value = "The maximum duration that a host will allow for a file contract. The host commits to keeping files for the full duration under the threat of facing a large penalty for losing or dropping data before the duration is complete. The storage proof window of an incoming file contract must end before the current height + maxduration. ")
  public Integer getMaxduration() {
    return maxduration;
  }

  public void setMaxduration(Integer maxduration) {
    this.maxduration = maxduration;
  }

  public InlineResponse200Externalsettings maxrevisebatchsize(Integer maxrevisebatchsize) {
    this.maxrevisebatchsize = maxrevisebatchsize;
    return this;
  }

   /**
   * The maximum size of a single batch of file contract revisions. The renter can perform DoS attacks on the host by uploading a batch of data then refusing to provide a signature to pay for the data. The host can reduce this exposure by limiting the batch size. Larger batch sizes allow for higher throughput as there is significant communication overhead associated with performing a batch upload. 
   * @return maxrevisebatchsize
  **/
  @ApiModelProperty(example = "17825792", value = "The maximum size of a single batch of file contract revisions. The renter can perform DoS attacks on the host by uploading a batch of data then refusing to provide a signature to pay for the data. The host can reduce this exposure by limiting the batch size. Larger batch sizes allow for higher throughput as there is significant communication overhead associated with performing a batch upload. ")
  public Integer getMaxrevisebatchsize() {
    return maxrevisebatchsize;
  }

  public void setMaxrevisebatchsize(Integer maxrevisebatchsize) {
    this.maxrevisebatchsize = maxrevisebatchsize;
  }

  public InlineResponse200Externalsettings netaddress(String netaddress) {
    this.netaddress = netaddress;
    return this;
  }

   /**
   * The IP address or hostname (including port) that the host should be contacted at.
   * @return netaddress
  **/
  @ApiModelProperty(example = "123.456.789.0:9982", value = "The IP address or hostname (including port) that the host should be contacted at.")
  public String getNetaddress() {
    return netaddress;
  }

  public void setNetaddress(String netaddress) {
    this.netaddress = netaddress;
  }

  public InlineResponse200Externalsettings remainingstorage(Integer remainingstorage) {
    this.remainingstorage = remainingstorage;
    return this;
  }

   /**
   * The amount of unused storage capacity on the host in bytes. It should be noted that the host can lie.
   * @return remainingstorage
  **/
  @ApiModelProperty(example = "35000000000", value = "The amount of unused storage capacity on the host in bytes. It should be noted that the host can lie.")
  public Integer getRemainingstorage() {
    return remainingstorage;
  }

  public void setRemainingstorage(Integer remainingstorage) {
    this.remainingstorage = remainingstorage;
  }

  public InlineResponse200Externalsettings totalstorage(Integer totalstorage) {
    this.totalstorage = totalstorage;
    return this;
  }

   /**
   * The total amount of storage capacity on the host. It should be noted that the host can lie.
   * @return totalstorage
  **/
  @ApiModelProperty(example = "35000000000", value = "The total amount of storage capacity on the host. It should be noted that the host can lie.")
  public Integer getTotalstorage() {
    return totalstorage;
  }

  public void setTotalstorage(Integer totalstorage) {
    this.totalstorage = totalstorage;
  }

  public InlineResponse200Externalsettings unlockhash(String unlockhash) {
    this.unlockhash = unlockhash;
    return this;
  }

   /**
   * The unlock hash is the address at which the host can be paid when forming file contracts.
   * @return unlockhash
  **/
  @ApiModelProperty(example = "0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123456789ab", value = "The unlock hash is the address at which the host can be paid when forming file contracts.")
  public String getUnlockhash() {
    return unlockhash;
  }

  public void setUnlockhash(String unlockhash) {
    this.unlockhash = unlockhash;
  }

  public InlineResponse200Externalsettings windowsize(Integer windowsize) {
    this.windowsize = windowsize;
    return this;
  }

   /**
   * The storage proof window is the number of blocks that the host has to get a storage proof onto the blockchain. The window size is the minimum size of window that the host will accept in a file contract. 
   * @return windowsize
  **/
  @ApiModelProperty(example = "144", value = "The storage proof window is the number of blocks that the host has to get a storage proof onto the blockchain. The window size is the minimum size of window that the host will accept in a file contract. ")
  public Integer getWindowsize() {
    return windowsize;
  }

  public void setWindowsize(Integer windowsize) {
    this.windowsize = windowsize;
  }

  public InlineResponse200Externalsettings collateral(String collateral) {
    this.collateral = collateral;
    return this;
  }

   /**
   * The maximum amount of money that the host will put up as collateral for storage that is contracted by the renter.
   * @return collateral
  **/
  @ApiModelProperty(example = "57870370370", value = "The maximum amount of money that the host will put up as collateral for storage that is contracted by the renter.")
  public String getCollateral() {
    return collateral;
  }

  public void setCollateral(String collateral) {
    this.collateral = collateral;
  }

  public InlineResponse200Externalsettings maxcollateral(String maxcollateral) {
    this.maxcollateral = maxcollateral;
    return this;
  }

   /**
   * The maximum amount of collateral that the host will put into a single file contract.
   * @return maxcollateral
  **/
  @ApiModelProperty(example = "1e+29", value = "The maximum amount of collateral that the host will put into a single file contract.")
  public String getMaxcollateral() {
    return maxcollateral;
  }

  public void setMaxcollateral(String maxcollateral) {
    this.maxcollateral = maxcollateral;
  }

  public InlineResponse200Externalsettings contractprice(String contractprice) {
    this.contractprice = contractprice;
    return this;
  }

   /**
   * The price that a renter has to pay to create a contract with the host. The payment is intended to cover transaction fees for the file contract revision and the storage proof that the host will be submitting to the blockchain. 
   * @return contractprice
  **/
  @ApiModelProperty(example = "3e+25", value = "The price that a renter has to pay to create a contract with the host. The payment is intended to cover transaction fees for the file contract revision and the storage proof that the host will be submitting to the blockchain. ")
  public String getContractprice() {
    return contractprice;
  }

  public void setContractprice(String contractprice) {
    this.contractprice = contractprice;
  }

  public InlineResponse200Externalsettings downloadbandwidthprice(String downloadbandwidthprice) {
    this.downloadbandwidthprice = downloadbandwidthprice;
    return this;
  }

   /**
   * The price that a renter has to pay when downloading data from the host.
   * @return downloadbandwidthprice
  **/
  @ApiModelProperty(example = "250000000000000", value = "The price that a renter has to pay when downloading data from the host.")
  public String getDownloadbandwidthprice() {
    return downloadbandwidthprice;
  }

  public void setDownloadbandwidthprice(String downloadbandwidthprice) {
    this.downloadbandwidthprice = downloadbandwidthprice;
  }

  public InlineResponse200Externalsettings storageprice(String storageprice) {
    this.storageprice = storageprice;
    return this;
  }

   /**
   * The price that a renter has to pay to store files with the host.
   * @return storageprice
  **/
  @ApiModelProperty(example = "231481481481", value = "The price that a renter has to pay to store files with the host.")
  public String getStorageprice() {
    return storageprice;
  }

  public void setStorageprice(String storageprice) {
    this.storageprice = storageprice;
  }

  public InlineResponse200Externalsettings uploadbandwidthprice(String uploadbandwidthprice) {
    this.uploadbandwidthprice = uploadbandwidthprice;
    return this;
  }

   /**
   * The price that a renter has to pay when uploading data to the host.
   * @return uploadbandwidthprice
  **/
  @ApiModelProperty(example = "100000000000000", value = "The price that a renter has to pay when uploading data to the host.")
  public String getUploadbandwidthprice() {
    return uploadbandwidthprice;
  }

  public void setUploadbandwidthprice(String uploadbandwidthprice) {
    this.uploadbandwidthprice = uploadbandwidthprice;
  }

  public InlineResponse200Externalsettings revisionnumber(Integer revisionnumber) {
    this.revisionnumber = revisionnumber;
    return this;
  }

   /**
   * The revision number indicates to the renter what iteration of settings the host is currently at. Settings are generally signed. If the renter has multiple conflicting copies of settings from the host, the renter can expect the one with the higher revision number to be more recent. 
   * @return revisionnumber
  **/
  @ApiModelProperty(example = "0", value = "The revision number indicates to the renter what iteration of settings the host is currently at. Settings are generally signed. If the renter has multiple conflicting copies of settings from the host, the renter can expect the one with the higher revision number to be more recent. ")
  public Integer getRevisionnumber() {
    return revisionnumber;
  }

  public void setRevisionnumber(Integer revisionnumber) {
    this.revisionnumber = revisionnumber;
  }

  public InlineResponse200Externalsettings version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of external settings being used. This field helps coordinate updates while preserving compatibility with older nodes.
   * @return version
  **/
  @ApiModelProperty(example = "1.0.0", value = "The version of external settings being used. This field helps coordinate updates while preserving compatibility with older nodes.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200Externalsettings inlineResponse200Externalsettings = (InlineResponse200Externalsettings) o;
    return Objects.equals(this.acceptingcontracts, inlineResponse200Externalsettings.acceptingcontracts) &&
        Objects.equals(this.maxdownloadbatchsize, inlineResponse200Externalsettings.maxdownloadbatchsize) &&
        Objects.equals(this.maxduration, inlineResponse200Externalsettings.maxduration) &&
        Objects.equals(this.maxrevisebatchsize, inlineResponse200Externalsettings.maxrevisebatchsize) &&
        Objects.equals(this.netaddress, inlineResponse200Externalsettings.netaddress) &&
        Objects.equals(this.remainingstorage, inlineResponse200Externalsettings.remainingstorage) &&
        Objects.equals(this.totalstorage, inlineResponse200Externalsettings.totalstorage) &&
        Objects.equals(this.unlockhash, inlineResponse200Externalsettings.unlockhash) &&
        Objects.equals(this.windowsize, inlineResponse200Externalsettings.windowsize) &&
        Objects.equals(this.collateral, inlineResponse200Externalsettings.collateral) &&
        Objects.equals(this.maxcollateral, inlineResponse200Externalsettings.maxcollateral) &&
        Objects.equals(this.contractprice, inlineResponse200Externalsettings.contractprice) &&
        Objects.equals(this.downloadbandwidthprice, inlineResponse200Externalsettings.downloadbandwidthprice) &&
        Objects.equals(this.storageprice, inlineResponse200Externalsettings.storageprice) &&
        Objects.equals(this.uploadbandwidthprice, inlineResponse200Externalsettings.uploadbandwidthprice) &&
        Objects.equals(this.revisionnumber, inlineResponse200Externalsettings.revisionnumber) &&
        Objects.equals(this.version, inlineResponse200Externalsettings.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acceptingcontracts, maxdownloadbatchsize, maxduration, maxrevisebatchsize, netaddress, remainingstorage, totalstorage, unlockhash, windowsize, collateral, maxcollateral, contractprice, downloadbandwidthprice, storageprice, uploadbandwidthprice, revisionnumber, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200Externalsettings {\n");
    
    sb.append("    acceptingcontracts: ").append(toIndentedString(acceptingcontracts)).append("\n");
    sb.append("    maxdownloadbatchsize: ").append(toIndentedString(maxdownloadbatchsize)).append("\n");
    sb.append("    maxduration: ").append(toIndentedString(maxduration)).append("\n");
    sb.append("    maxrevisebatchsize: ").append(toIndentedString(maxrevisebatchsize)).append("\n");
    sb.append("    netaddress: ").append(toIndentedString(netaddress)).append("\n");
    sb.append("    remainingstorage: ").append(toIndentedString(remainingstorage)).append("\n");
    sb.append("    totalstorage: ").append(toIndentedString(totalstorage)).append("\n");
    sb.append("    unlockhash: ").append(toIndentedString(unlockhash)).append("\n");
    sb.append("    windowsize: ").append(toIndentedString(windowsize)).append("\n");
    sb.append("    collateral: ").append(toIndentedString(collateral)).append("\n");
    sb.append("    maxcollateral: ").append(toIndentedString(maxcollateral)).append("\n");
    sb.append("    contractprice: ").append(toIndentedString(contractprice)).append("\n");
    sb.append("    downloadbandwidthprice: ").append(toIndentedString(downloadbandwidthprice)).append("\n");
    sb.append("    storageprice: ").append(toIndentedString(storageprice)).append("\n");
    sb.append("    uploadbandwidthprice: ").append(toIndentedString(uploadbandwidthprice)).append("\n");
    sb.append("    revisionnumber: ").append(toIndentedString(revisionnumber)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

