/*
 * Sia
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goobox.sync.sia.client.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.goobox.sync.sia.client.api.model.TransactionInputs;
import io.goobox.sync.sia.client.api.model.TransactionOutputs;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Transaction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-23T01:54:58.054-05:00")
public class Transaction {
  @SerializedName("transaction")
  private Object transaction = null;

  @SerializedName("transactionid")
  private String transactionid = null;

  @SerializedName("confirmationheight")
  private Long confirmationheight = null;

  @SerializedName("confirmationtimestamp")
  private Long confirmationtimestamp = null;

  @SerializedName("inputs")
  private List<TransactionInputs> inputs = null;

  @SerializedName("outputs")
  private List<TransactionOutputs> outputs = null;

  public Transaction transaction(Object transaction) {
    this.transaction = transaction;
    return this;
  }

   /**
   * Raw transaction. The rest of the fields in the resposne are determined from this raw transaction. It is left undocumented here as the processed transaction (the rest of the fields in this object) are usually what is desired.
   * @return transaction
  **/
  @ApiModelProperty(value = "Raw transaction. The rest of the fields in the resposne are determined from this raw transaction. It is left undocumented here as the processed transaction (the rest of the fields in this object) are usually what is desired.")
  public Object getTransaction() {
    return transaction;
  }

  public void setTransaction(Object transaction) {
    this.transaction = transaction;
  }

  public Transaction transactionid(String transactionid) {
    this.transactionid = transactionid;
    return this;
  }

   /**
   * ID of the transaction from which the wallet transaction was derived.
   * @return transactionid
  **/
  @ApiModelProperty(example = "1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef", value = "ID of the transaction from which the wallet transaction was derived.")
  public String getTransactionid() {
    return transactionid;
  }

  public void setTransactionid(String transactionid) {
    this.transactionid = transactionid;
  }

  public Transaction confirmationheight(Long confirmationheight) {
    this.confirmationheight = confirmationheight;
    return this;
  }

   /**
   * Block height at which the transaction was confirmed. If the transaction is unconfirmed the height will be the max value of an unsigned 64-bit integer.
   * @return confirmationheight
  **/
  @ApiModelProperty(example = "50000", value = "Block height at which the transaction was confirmed. If the transaction is unconfirmed the height will be the max value of an unsigned 64-bit integer.")
  public Long getConfirmationheight() {
    return confirmationheight;
  }

  public void setConfirmationheight(Long confirmationheight) {
    this.confirmationheight = confirmationheight;
  }

  public Transaction confirmationtimestamp(Long confirmationtimestamp) {
    this.confirmationtimestamp = confirmationtimestamp;
    return this;
  }

   /**
   * Time, in unix time, at which a transaction was confirmed. If the transaction is unconfirmed the timestamp will be the max value of an unsigned 64-bit integer.
   * @return confirmationtimestamp
  **/
  @ApiModelProperty(example = "1257894000", value = "Time, in unix time, at which a transaction was confirmed. If the transaction is unconfirmed the timestamp will be the max value of an unsigned 64-bit integer.")
  public Long getConfirmationtimestamp() {
    return confirmationtimestamp;
  }

  public void setConfirmationtimestamp(Long confirmationtimestamp) {
    this.confirmationtimestamp = confirmationtimestamp;
  }

  public Transaction inputs(List<TransactionInputs> inputs) {
    this.inputs = inputs;
    return this;
  }

  public Transaction addInputsItem(TransactionInputs inputsItem) {
    if (this.inputs == null) {
      this.inputs = new ArrayList<TransactionInputs>();
    }
    this.inputs.add(inputsItem);
    return this;
  }

   /**
   * Array of processed inputs detailing the inputs to the transaction.
   * @return inputs
  **/
  @ApiModelProperty(value = "Array of processed inputs detailing the inputs to the transaction.")
  public List<TransactionInputs> getInputs() {
    return inputs;
  }

  public void setInputs(List<TransactionInputs> inputs) {
    this.inputs = inputs;
  }

  public Transaction outputs(List<TransactionOutputs> outputs) {
    this.outputs = outputs;
    return this;
  }

  public Transaction addOutputsItem(TransactionOutputs outputsItem) {
    if (this.outputs == null) {
      this.outputs = new ArrayList<TransactionOutputs>();
    }
    this.outputs.add(outputsItem);
    return this;
  }

   /**
   * Array of processed outputs detailing the outputs of the transaction. Outputs related to file contracts are excluded.
   * @return outputs
  **/
  @ApiModelProperty(value = "Array of processed outputs detailing the outputs of the transaction. Outputs related to file contracts are excluded.")
  public List<TransactionOutputs> getOutputs() {
    return outputs;
  }

  public void setOutputs(List<TransactionOutputs> outputs) {
    this.outputs = outputs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Transaction transaction = (Transaction) o;
    return Objects.equals(this.transaction, transaction.transaction) &&
        Objects.equals(this.transactionid, transaction.transactionid) &&
        Objects.equals(this.confirmationheight, transaction.confirmationheight) &&
        Objects.equals(this.confirmationtimestamp, transaction.confirmationtimestamp) &&
        Objects.equals(this.inputs, transaction.inputs) &&
        Objects.equals(this.outputs, transaction.outputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transaction, transactionid, confirmationheight, confirmationtimestamp, inputs, outputs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Transaction {\n");
    
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    transactionid: ").append(toIndentedString(transactionid)).append("\n");
    sb.append("    confirmationheight: ").append(toIndentedString(confirmationheight)).append("\n");
    sb.append("    confirmationtimestamp: ").append(toIndentedString(confirmationtimestamp)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

