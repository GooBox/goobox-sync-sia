/*
 * Sia
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goobox.sync.sia.client.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A set of scores as determined by the renter. Generally, the host&#39;s final final score is all of the values multiplied together. Modified renters may have additional criteria that they use to judge a host, or may ignore certin criteia. In general, these fields should only be used as a loose guide for the score of a host, as every renter sees the world differently and uses different metrics to evaluate hosts. 
 */
@ApiModel(description = "A set of scores as determined by the renter. Generally, the host's final final score is all of the values multiplied together. Modified renters may have additional criteria that they use to judge a host, or may ignore certin criteia. In general, these fields should only be used as a loose guide for the score of a host, as every renter sees the world differently and uses different metrics to evaluate hosts. ")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-23T01:54:58.054-05:00")
public class InlineResponse2002EntryScorebreakdown {
  @SerializedName("score")
  private Integer score = null;

  @SerializedName("ageadjustment")
  private Integer ageadjustment = null;

  @SerializedName("burnadjustment")
  private Integer burnadjustment = null;

  @SerializedName("collateraladjustment")
  private Integer collateraladjustment = null;

  @SerializedName("priceadjustment")
  private Integer priceadjustment = null;

  @SerializedName("storageremainingadjustment")
  private Integer storageremainingadjustment = null;

  @SerializedName("uptimeadjustment")
  private Integer uptimeadjustment = null;

  @SerializedName("versionadjustment")
  private Integer versionadjustment = null;

  public InlineResponse2002EntryScorebreakdown score(Integer score) {
    this.score = score;
    return this;
  }

   /**
   * The overall score for the host. Scores are entriely relative, and are consistent only within the current hostdb. Between different machines, different configurations, and different versions the absolute scores for a given host can be off by many orders of magnitude. When displaying to a human, some form of normalization with respect to the other hosts (for example, divide all scores by the median score of the hosts) is recommended. 
   * @return score
  **/
  @ApiModelProperty(example = "123456", value = "The overall score for the host. Scores are entriely relative, and are consistent only within the current hostdb. Between different machines, different configurations, and different versions the absolute scores for a given host can be off by many orders of magnitude. When displaying to a human, some form of normalization with respect to the other hosts (for example, divide all scores by the median score of the hosts) is recommended. ")
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }

  public InlineResponse2002EntryScorebreakdown ageadjustment(Integer ageadjustment) {
    this.ageadjustment = ageadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to the host based on how long it has been a host. Older hosts typically have a lower penalty.
   * @return ageadjustment
  **/
  @ApiModelProperty(example = "0.1234", value = "The multiplier that gets applied to the host based on how long it has been a host. Older hosts typically have a lower penalty.")
  public Integer getAgeadjustment() {
    return ageadjustment;
  }

  public void setAgeadjustment(Integer ageadjustment) {
    this.ageadjustment = ageadjustment;
  }

  public InlineResponse2002EntryScorebreakdown burnadjustment(Integer burnadjustment) {
    this.burnadjustment = burnadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to the host based on how much proof-of-burn the host has performed. More burn causes a linear increase in score.
   * @return burnadjustment
  **/
  @ApiModelProperty(example = "23.456", value = "The multiplier that gets applied to the host based on how much proof-of-burn the host has performed. More burn causes a linear increase in score.")
  public Integer getBurnadjustment() {
    return burnadjustment;
  }

  public void setBurnadjustment(Integer burnadjustment) {
    this.burnadjustment = burnadjustment;
  }

  public InlineResponse2002EntryScorebreakdown collateraladjustment(Integer collateraladjustment) {
    this.collateraladjustment = collateraladjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to a host based on how much collateral the host is offering. More collateral is typically better, though above a point it can be detrimental.
   * @return collateraladjustment
  **/
  @ApiModelProperty(example = "23.456", value = "The multiplier that gets applied to a host based on how much collateral the host is offering. More collateral is typically better, though above a point it can be detrimental.")
  public Integer getCollateraladjustment() {
    return collateraladjustment;
  }

  public void setCollateraladjustment(Integer collateraladjustment) {
    this.collateraladjustment = collateraladjustment;
  }

  public InlineResponse2002EntryScorebreakdown priceadjustment(Integer priceadjustment) {
    this.priceadjustment = priceadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to a host based on the host&#39;s price. Lower prices are almost always better. Below a certain, very low price, there is no advantage.
   * @return priceadjustment
  **/
  @ApiModelProperty(example = "0.1234", value = "The multiplier that gets applied to a host based on the host's price. Lower prices are almost always better. Below a certain, very low price, there is no advantage.")
  public Integer getPriceadjustment() {
    return priceadjustment;
  }

  public void setPriceadjustment(Integer priceadjustment) {
    this.priceadjustment = priceadjustment;
  }

  public InlineResponse2002EntryScorebreakdown storageremainingadjustment(Integer storageremainingadjustment) {
    this.storageremainingadjustment = storageremainingadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to a host based on how much storage is remaining for the host. More storage remaining is better, to a point.
   * @return storageremainingadjustment
  **/
  @ApiModelProperty(example = "0.1234", value = "The multiplier that gets applied to a host based on how much storage is remaining for the host. More storage remaining is better, to a point.")
  public Integer getStorageremainingadjustment() {
    return storageremainingadjustment;
  }

  public void setStorageremainingadjustment(Integer storageremainingadjustment) {
    this.storageremainingadjustment = storageremainingadjustment;
  }

  public InlineResponse2002EntryScorebreakdown uptimeadjustment(Integer uptimeadjustment) {
    this.uptimeadjustment = uptimeadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to a host based on the uptime percentage of the host. The penalty increases extremely quickly as uptime drops below 90%.
   * @return uptimeadjustment
  **/
  @ApiModelProperty(example = "0.1234", value = "The multiplier that gets applied to a host based on the uptime percentage of the host. The penalty increases extremely quickly as uptime drops below 90%.")
  public Integer getUptimeadjustment() {
    return uptimeadjustment;
  }

  public void setUptimeadjustment(Integer uptimeadjustment) {
    this.uptimeadjustment = uptimeadjustment;
  }

  public InlineResponse2002EntryScorebreakdown versionadjustment(Integer versionadjustment) {
    this.versionadjustment = versionadjustment;
    return this;
  }

   /**
   * The multiplier that gets applied to a host based on the version of Sia that they are running. Versions get penalties if there are known bugs, scaling limitations, performance limitations, etc. Generally, the most recent version is always the one with the highest score. 
   * @return versionadjustment
  **/
  @ApiModelProperty(example = "0.1234", value = "The multiplier that gets applied to a host based on the version of Sia that they are running. Versions get penalties if there are known bugs, scaling limitations, performance limitations, etc. Generally, the most recent version is always the one with the highest score. ")
  public Integer getVersionadjustment() {
    return versionadjustment;
  }

  public void setVersionadjustment(Integer versionadjustment) {
    this.versionadjustment = versionadjustment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2002EntryScorebreakdown inlineResponse2002EntryScorebreakdown = (InlineResponse2002EntryScorebreakdown) o;
    return Objects.equals(this.score, inlineResponse2002EntryScorebreakdown.score) &&
        Objects.equals(this.ageadjustment, inlineResponse2002EntryScorebreakdown.ageadjustment) &&
        Objects.equals(this.burnadjustment, inlineResponse2002EntryScorebreakdown.burnadjustment) &&
        Objects.equals(this.collateraladjustment, inlineResponse2002EntryScorebreakdown.collateraladjustment) &&
        Objects.equals(this.priceadjustment, inlineResponse2002EntryScorebreakdown.priceadjustment) &&
        Objects.equals(this.storageremainingadjustment, inlineResponse2002EntryScorebreakdown.storageremainingadjustment) &&
        Objects.equals(this.uptimeadjustment, inlineResponse2002EntryScorebreakdown.uptimeadjustment) &&
        Objects.equals(this.versionadjustment, inlineResponse2002EntryScorebreakdown.versionadjustment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(score, ageadjustment, burnadjustment, collateraladjustment, priceadjustment, storageremainingadjustment, uptimeadjustment, versionadjustment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2002EntryScorebreakdown {\n");
    
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    ageadjustment: ").append(toIndentedString(ageadjustment)).append("\n");
    sb.append("    burnadjustment: ").append(toIndentedString(burnadjustment)).append("\n");
    sb.append("    collateraladjustment: ").append(toIndentedString(collateraladjustment)).append("\n");
    sb.append("    priceadjustment: ").append(toIndentedString(priceadjustment)).append("\n");
    sb.append("    storageremainingadjustment: ").append(toIndentedString(storageremainingadjustment)).append("\n");
    sb.append("    uptimeadjustment: ").append(toIndentedString(uptimeadjustment)).append("\n");
    sb.append("    versionadjustment: ").append(toIndentedString(versionadjustment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

