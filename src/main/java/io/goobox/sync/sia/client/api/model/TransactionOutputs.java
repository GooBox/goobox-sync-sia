/*
 * Sia
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goobox.sync.sia.client.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TransactionOutputs
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-01T00:02:50.340-05:00")
public class TransactionOutputs {
  @SerializedName("fundtype")
  private String fundtype = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("maturityheight")
  private Long maturityheight = null;

  @SerializedName("relatedaddress")
  private String relatedaddress = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("walletaddress")
  private Boolean walletaddress = null;

  public TransactionOutputs fundtype(String fundtype) {
    this.fundtype = fundtype;
    return this;
  }

   /**
   * Type of fund is represented by the output. Possible values are &#39;siacoin output&#39;, &#39;siafund output&#39;, &#39;claim output&#39;, and &#39;miner payout&#39;. Siacoin outputs and claim outputs both relate to siacoins. Siafund outputs relate to siafunds. Miner payouts point to siacoins that have been spent on a miner payout. Because the destination of the miner payout is determined by the block and not the transaction, the data &#39;maturityheight&#39;, &#39;walletaddress&#39;, and &#39;relatedaddress&#39; are left blank.
   * @return fundtype
  **/
  @ApiModelProperty(example = "siacoin output", value = "Type of fund is represented by the output. Possible values are 'siacoin output', 'siafund output', 'claim output', and 'miner payout'. Siacoin outputs and claim outputs both relate to siacoins. Siafund outputs relate to siafunds. Miner payouts point to siacoins that have been spent on a miner payout. Because the destination of the miner payout is determined by the block and not the transaction, the data 'maturityheight', 'walletaddress', and 'relatedaddress' are left blank.")
  public String getFundtype() {
    return fundtype;
  }

  public void setFundtype(String fundtype) {
    this.fundtype = fundtype;
  }

  public TransactionOutputs id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The id of the output that was created.
   * @return id
  **/
  @ApiModelProperty(example = "1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef", value = "The id of the output that was created.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TransactionOutputs maturityheight(Long maturityheight) {
    this.maturityheight = maturityheight;
    return this;
  }

   /**
   * Block height the output becomes available to be spent. Siacoin outputs and siafund outputs mature immediately - their maturity height will always be the confirmation height of the transaction. Claim outputs cannot be spent until they have had 144 confirmations, thus the maturity height of a claim output will always be 144 larger than the confirmation height of the transaction.
   * @return maturityheight
  **/
  @ApiModelProperty(example = "50000", value = "Block height the output becomes available to be spent. Siacoin outputs and siafund outputs mature immediately - their maturity height will always be the confirmation height of the transaction. Claim outputs cannot be spent until they have had 144 confirmations, thus the maturity height of a claim output will always be 144 larger than the confirmation height of the transaction.")
  public Long getMaturityheight() {
    return maturityheight;
  }

  public void setMaturityheight(Long maturityheight) {
    this.maturityheight = maturityheight;
  }

  public TransactionOutputs relatedaddress(String relatedaddress) {
    this.relatedaddress = relatedaddress;
    return this;
  }

   /**
   * Address that is affected. For outputs (incoming money), the related address field can be used to determine who has sent money to the wallet.
   * @return relatedaddress
  **/
  @ApiModelProperty(example = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", value = "Address that is affected. For outputs (incoming money), the related address field can be used to determine who has sent money to the wallet.")
  public String getRelatedaddress() {
    return relatedaddress;
  }

  public void setRelatedaddress(String relatedaddress) {
    this.relatedaddress = relatedaddress;
  }

  public TransactionOutputs value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Amount of funds that have been moved in the output.
   * @return value
  **/
  @ApiModelProperty(example = "1234", value = "Amount of funds that have been moved in the output.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public TransactionOutputs walletaddress(Boolean walletaddress) {
    this.walletaddress = walletaddress;
    return this;
  }

   /**
   * true if the address is owned by the wallet.
   * @return walletaddress
  **/
  @ApiModelProperty(example = "false", value = "true if the address is owned by the wallet.")
  public Boolean isWalletaddress() {
    return walletaddress;
  }

  public void setWalletaddress(Boolean walletaddress) {
    this.walletaddress = walletaddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransactionOutputs transactionOutputs = (TransactionOutputs) o;
    return Objects.equals(this.fundtype, transactionOutputs.fundtype) &&
        Objects.equals(this.id, transactionOutputs.id) &&
        Objects.equals(this.maturityheight, transactionOutputs.maturityheight) &&
        Objects.equals(this.relatedaddress, transactionOutputs.relatedaddress) &&
        Objects.equals(this.value, transactionOutputs.value) &&
        Objects.equals(this.walletaddress, transactionOutputs.walletaddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundtype, id, maturityheight, relatedaddress, value, walletaddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransactionOutputs {\n");
    
    sb.append("    fundtype: ").append(toIndentedString(fundtype)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maturityheight: ").append(toIndentedString(maturityheight)).append("\n");
    sb.append("    relatedaddress: ").append(toIndentedString(relatedaddress)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    walletaddress: ").append(toIndentedString(walletaddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

