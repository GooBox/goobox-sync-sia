/*
 * Sia
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.3.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.goobox.sync.sia.client.api.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.goobox.sync.sia.client.api.model.InlineResponse2009Hostpublickey;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InlineResponse2009Contracts
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-01T00:02:50.340-05:00")
public class InlineResponse2009Contracts {
  @SerializedName("downloadspending")
  private String downloadspending = null;

  @SerializedName("endheight")
  private Long endheight = null;

  @SerializedName("fees")
  private String fees = null;

  @SerializedName("goodforrenew")
  private Boolean goodforrenew = null;

  @SerializedName("goodforupload")
  private Boolean goodforupload = null;

  @SerializedName("hostpublickey")
  private InlineResponse2009Hostpublickey hostpublickey = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lasttransaction")
  private Object lasttransaction = null;

  @SerializedName("netaddress")
  private String netaddress = null;

  @SerializedName("renterfunds")
  private String renterfunds = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("startheight")
  private Long startheight = null;

  @SerializedName("storagespending")
  private String storagespending = null;

  @SerializedName("totalcost")
  private String totalcost = null;

  @SerializedName("uploadspending")
  private String uploadspending = null;

  public InlineResponse2009Contracts downloadspending(String downloadspending) {
    this.downloadspending = downloadspending;
    return this;
  }

   /**
   * Amount of contract funds that have been spent on downloads. In hastings.
   * @return downloadspending
  **/
  @ApiModelProperty(example = "1234", value = "Amount of contract funds that have been spent on downloads. In hastings.")
  public String getDownloadspending() {
    return downloadspending;
  }

  public void setDownloadspending(String downloadspending) {
    this.downloadspending = downloadspending;
  }

  public InlineResponse2009Contracts endheight(Long endheight) {
    this.endheight = endheight;
    return this;
  }

   /**
   * Block height that the file contract ends on.
   * @return endheight
  **/
  @ApiModelProperty(example = "50000", value = "Block height that the file contract ends on.")
  public Long getEndheight() {
    return endheight;
  }

  public void setEndheight(Long endheight) {
    this.endheight = endheight;
  }

  public InlineResponse2009Contracts fees(String fees) {
    this.fees = fees;
    return this;
  }

   /**
   * Fees paid in order to form the file contract.
   * @return fees
  **/
  @ApiModelProperty(example = "1234", value = "Fees paid in order to form the file contract.")
  public String getFees() {
    return fees;
  }

  public void setFees(String fees) {
    this.fees = fees;
  }

  public InlineResponse2009Contracts goodforrenew(Boolean goodforrenew) {
    this.goodforrenew = goodforrenew;
    return this;
  }

   /**
   * Signals if contract is good for a renewal
   * @return goodforrenew
  **/
  @ApiModelProperty(example = "false", value = "Signals if contract is good for a renewal")
  public Boolean isGoodforrenew() {
    return goodforrenew;
  }

  public void setGoodforrenew(Boolean goodforrenew) {
    this.goodforrenew = goodforrenew;
  }

  public InlineResponse2009Contracts goodforupload(Boolean goodforupload) {
    this.goodforupload = goodforupload;
    return this;
  }

   /**
   * Signals if contract is good for uploading data
   * @return goodforupload
  **/
  @ApiModelProperty(example = "true", value = "Signals if contract is good for uploading data")
  public Boolean isGoodforupload() {
    return goodforupload;
  }

  public void setGoodforupload(Boolean goodforupload) {
    this.goodforupload = goodforupload;
  }

  public InlineResponse2009Contracts hostpublickey(InlineResponse2009Hostpublickey hostpublickey) {
    this.hostpublickey = hostpublickey;
    return this;
  }

   /**
   * Get hostpublickey
   * @return hostpublickey
  **/
  @ApiModelProperty(value = "")
  public InlineResponse2009Hostpublickey getHostpublickey() {
    return hostpublickey;
  }

  public void setHostpublickey(InlineResponse2009Hostpublickey hostpublickey) {
    this.hostpublickey = hostpublickey;
  }

  public InlineResponse2009Contracts id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the file contract
   * @return id
  **/
  @ApiModelProperty(example = "1234567890abcdef0123456789abcdef0123456789abcdef0123456789abcdef", value = "ID of the file contract")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse2009Contracts lasttransaction(Object lasttransaction) {
    this.lasttransaction = lasttransaction;
    return this;
  }

   /**
   * A signed transaction containing the most recent contract revision.
   * @return lasttransaction
  **/
  @ApiModelProperty(value = "A signed transaction containing the most recent contract revision.")
  public Object getLasttransaction() {
    return lasttransaction;
  }

  public void setLasttransaction(Object lasttransaction) {
    this.lasttransaction = lasttransaction;
  }

  public InlineResponse2009Contracts netaddress(String netaddress) {
    this.netaddress = netaddress;
    return this;
  }

   /**
   * Address of the host the file contract was formed with.
   * @return netaddress
  **/
  @ApiModelProperty(example = "12.34.56.78:9", value = "Address of the host the file contract was formed with.")
  public String getNetaddress() {
    return netaddress;
  }

  public void setNetaddress(String netaddress) {
    this.netaddress = netaddress;
  }

  public InlineResponse2009Contracts renterfunds(String renterfunds) {
    this.renterfunds = renterfunds;
    return this;
  }

   /**
   * Remaining funds left for the renter to spend on uploads &amp; downloads.
   * @return renterfunds
  **/
  @ApiModelProperty(example = "1234", value = "Remaining funds left for the renter to spend on uploads & downloads.")
  public String getRenterfunds() {
    return renterfunds;
  }

  public void setRenterfunds(String renterfunds) {
    this.renterfunds = renterfunds;
  }

  public InlineResponse2009Contracts size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Size of the file contract, which is typically equal to the number of bytes that have been uploaded to the host.
   * @return size
  **/
  @ApiModelProperty(example = "8192", value = "Size of the file contract, which is typically equal to the number of bytes that have been uploaded to the host.")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public InlineResponse2009Contracts startheight(Long startheight) {
    this.startheight = startheight;
    return this;
  }

   /**
   * Block height that the file contract began on.
   * @return startheight
  **/
  @ApiModelProperty(example = "50000", value = "Block height that the file contract began on.")
  public Long getStartheight() {
    return startheight;
  }

  public void setStartheight(Long startheight) {
    this.startheight = startheight;
  }

  public InlineResponse2009Contracts storagespending(String storagespending) {
    this.storagespending = storagespending;
    return this;
  }

   /**
   * Amount of contract funds that have been spent on storage.
   * @return storagespending
  **/
  @ApiModelProperty(example = "1234", value = "Amount of contract funds that have been spent on storage.")
  public String getStoragespending() {
    return storagespending;
  }

  public void setStoragespending(String storagespending) {
    this.storagespending = storagespending;
  }

  public InlineResponse2009Contracts totalcost(String totalcost) {
    this.totalcost = totalcost;
    return this;
  }

   /**
   * Total cost to the wallet of forming the file contract. This includes both the fees and the funds allocated in the contract.
   * @return totalcost
  **/
  @ApiModelProperty(example = "1234", value = "Total cost to the wallet of forming the file contract. This includes both the fees and the funds allocated in the contract.")
  public String getTotalcost() {
    return totalcost;
  }

  public void setTotalcost(String totalcost) {
    this.totalcost = totalcost;
  }

  public InlineResponse2009Contracts uploadspending(String uploadspending) {
    this.uploadspending = uploadspending;
    return this;
  }

   /**
   * Amount of contract funds that have been spent on uploads.
   * @return uploadspending
  **/
  @ApiModelProperty(example = "1234", value = "Amount of contract funds that have been spent on uploads.")
  public String getUploadspending() {
    return uploadspending;
  }

  public void setUploadspending(String uploadspending) {
    this.uploadspending = uploadspending;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2009Contracts inlineResponse2009Contracts = (InlineResponse2009Contracts) o;
    return Objects.equals(this.downloadspending, inlineResponse2009Contracts.downloadspending) &&
        Objects.equals(this.endheight, inlineResponse2009Contracts.endheight) &&
        Objects.equals(this.fees, inlineResponse2009Contracts.fees) &&
        Objects.equals(this.goodforrenew, inlineResponse2009Contracts.goodforrenew) &&
        Objects.equals(this.goodforupload, inlineResponse2009Contracts.goodforupload) &&
        Objects.equals(this.hostpublickey, inlineResponse2009Contracts.hostpublickey) &&
        Objects.equals(this.id, inlineResponse2009Contracts.id) &&
        Objects.equals(this.lasttransaction, inlineResponse2009Contracts.lasttransaction) &&
        Objects.equals(this.netaddress, inlineResponse2009Contracts.netaddress) &&
        Objects.equals(this.renterfunds, inlineResponse2009Contracts.renterfunds) &&
        Objects.equals(this.size, inlineResponse2009Contracts.size) &&
        Objects.equals(this.startheight, inlineResponse2009Contracts.startheight) &&
        Objects.equals(this.storagespending, inlineResponse2009Contracts.storagespending) &&
        Objects.equals(this.totalcost, inlineResponse2009Contracts.totalcost) &&
        Objects.equals(this.uploadspending, inlineResponse2009Contracts.uploadspending);
  }

  @Override
  public int hashCode() {
    return Objects.hash(downloadspending, endheight, fees, goodforrenew, goodforupload, hostpublickey, id, lasttransaction, netaddress, renterfunds, size, startheight, storagespending, totalcost, uploadspending);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2009Contracts {\n");
    
    sb.append("    downloadspending: ").append(toIndentedString(downloadspending)).append("\n");
    sb.append("    endheight: ").append(toIndentedString(endheight)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    goodforrenew: ").append(toIndentedString(goodforrenew)).append("\n");
    sb.append("    goodforupload: ").append(toIndentedString(goodforupload)).append("\n");
    sb.append("    hostpublickey: ").append(toIndentedString(hostpublickey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lasttransaction: ").append(toIndentedString(lasttransaction)).append("\n");
    sb.append("    netaddress: ").append(toIndentedString(netaddress)).append("\n");
    sb.append("    renterfunds: ").append(toIndentedString(renterfunds)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    startheight: ").append(toIndentedString(startheight)).append("\n");
    sb.append("    storagespending: ").append(toIndentedString(storagespending)).append("\n");
    sb.append("    totalcost: ").append(toIndentedString(totalcost)).append("\n");
    sb.append("    uploadspending: ").append(toIndentedString(uploadspending)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

